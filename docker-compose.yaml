volumes:
  cargo:

services:

  kfk:
    image: apache/kafka
    profiles:
      - kafka
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kfk:9092
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s

  kfk-init:
    image: apache/kafka
    profiles:
      - kafka
    command: ["./kafka-topics.sh", "--bootstrap-server", "kfk:9092", "--create", "--topic", "posts"]
    working_dir: "/opt/kafka/bin"
    depends_on:
      kfk:
        condition: service_healthy

  kwl:
    image: rsmnarts/kowl
    profiles:
      - kafka
    ports:
      - "127.0.0.1:8181:8080"
    environment:
      - KAFKA_BROKERS=kfk:9092
    depends_on:
      kfk-init:
        condition: service_completed_successfully

  rst:
    profiles:
      - jrpk
    build: .
    environment:
      #- RUST_BACKTRACE=full
      - TOKIO_CONSOLE_BIND=0.0.0.0:6669
      - RUST_LOG=debug,tokio::task=info
    volumes:
      - .:/jrpk
      - cargo:/usr/local/cargo
    working_dir: /jrpk

  trc:
    profiles:
      - jrpk
    build: .
    command: ['tokio-console', 'http://jrpk:6669']

  cli:
    profiles:
      - jrpk
    build: .
    command: ['curl', 'http://jrpk:1133', '<<<', '12345']
